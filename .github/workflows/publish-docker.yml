name: publish docker image

on:
  push:
    branches:
      - master

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix
        uses: cachix/install-nix-action@v27

      - name: Attempt to Build Docker Image
        id: build
        run: |
          set -e
          nix build -L .#dockerImage || (echo "BUILD_FAILED" && exit 1)

      - name: Detect Hash Mismatch and Update flake.nix
        if: failure()
        run: |
          # Extract new hash from the error logs
          NEW_HASH=$(nix build .#dockerImage 2>&1 | grep -oP 'got: \Ksha256-[a-zA-Z0-9+/=]+')

          if [ -z "$NEW_HASH" ]; then
            echo "Failed to retrieve new hash from logs."
            exit 1
          fi

          # Update flake.nix with the new outputHash
          sed -i "s/outputHash = \".*\";/outputHash = \"$NEW_HASH\";/" flake.nix
          echo "Updated outputHash in flake.nix to $NEW_HASH"

          # Commit the updated flake.nix
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add flake.nix
          git commit -m "Update outputHash in flake.nix"
          git push

      - name: Retry Build
        if: steps.build.outcome == 'failure'
        run: nix build -L .#dockerImage

      - name: Log in to Docker Hub
        if: steps.build.outcome != 'failure'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Publish Docker Image
        if: steps.build.outcome != 'failure'
        run: |
          docker load < result
          docker tag lurker:latest ${{ secrets.DOCKER_USERNAME }}/lurker:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/lurker:latest
